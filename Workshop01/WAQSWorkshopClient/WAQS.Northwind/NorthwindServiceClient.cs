// Copyright (c) Matthieu MEZIL.  All rights reserved.
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/Query", ClrNamespace = "WAQS.ClientContext.Interfaces.Query")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/QuerySerialization", ClrNamespace = "WAQS.ClientContext.Interfaces.ExpressionSerialization")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://Northwind/SerializableContext", ClrNamespace = "WAQSWorkshopClient.ClientContext.Interfaces.Serialization")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://Northwind/Entities", ClrNamespace = "WAQSWorkshopClient")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/EntityTracking", ClrNamespace = "WAQS.EntitiesTracking")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/Querying", ClrNamespace = "WAQS.ClientContext.Interfaces.Querying")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/QueryResult", ClrNamespace = "WAQS.ClientContext.QueryResult")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://Northwind/QueryResult", ClrNamespace = "WAQSWorkshopClient.ClientContext.QueryResult")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://Northwind/Fault", ClrNamespace = "WAQSWorkshopClient.ClientContext.Fault")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/Fault", ClrNamespace = "WAQS.ClientContext.Fault")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQS/Errors", ClrNamespace = "WAQS.ClientContext.Interfaces.Errors")]
// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace WAQSWorkshopClient.ClientContext.ServiceReference
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NorthwindServiceClient : System.ServiceModel.ClientBase<WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService>, WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService
    {
        private BeginOperationDelegate onBeginExecuteDelegate;
        private EndOperationDelegate onEndExecuteDelegate;
        private System.Threading.SendOrPostCallback onExecuteCompletedDelegate;
        private BeginOperationDelegate onBeginExecuteManyDelegate;
        private EndOperationDelegate onEndExecuteManyDelegate;
        private System.Threading.SendOrPostCallback onExecuteManyCompletedDelegate;
        private BeginOperationDelegate onBeginLoadPageDelegate;
        private EndOperationDelegate onEndLoadPageDelegate;
        private System.Threading.SendOrPostCallback onLoadPageCompletedDelegate;
        private BeginOperationDelegate onBeginGetDbDateTimeDelegate;
        private EndOperationDelegate onEndGetDbDateTimeDelegate;
        private System.Threading.SendOrPostCallback onGetDbDateTimeCompletedDelegate;
        private BeginOperationDelegate onBeginSaveChangesDelegate;
        private EndOperationDelegate onEndSaveChangesDelegate;
        private System.Threading.SendOrPostCallback onSaveChangesCompletedDelegate;
        private BeginOperationDelegate onBeginValidateCustomerDelegate;
        private EndOperationDelegate onEndValidateCustomerDelegate;
        private System.Threading.SendOrPostCallback onValidateCustomerCompletedDelegate;
        private BeginOperationDelegate onBeginValidateEmployeeDelegate;
        private EndOperationDelegate onEndValidateEmployeeDelegate;
        private System.Threading.SendOrPostCallback onValidateEmployeeCompletedDelegate;
        private BeginOperationDelegate onBeginValidateInvoiceDetailDelegate;
        private EndOperationDelegate onEndValidateInvoiceDetailDelegate;
        private System.Threading.SendOrPostCallback onValidateInvoiceDetailCompletedDelegate;
        private BeginOperationDelegate onBeginValidateInvoiceDelegate;
        private EndOperationDelegate onEndValidateInvoiceDelegate;
        private System.Threading.SendOrPostCallback onValidateInvoiceCompletedDelegate;
        private BeginOperationDelegate onBeginValidateOrderDetailDelegate;
        private EndOperationDelegate onEndValidateOrderDetailDelegate;
        private System.Threading.SendOrPostCallback onValidateOrderDetailCompletedDelegate;
        private BeginOperationDelegate onBeginValidateOrderDelegate;
        private EndOperationDelegate onEndValidateOrderDelegate;
        private System.Threading.SendOrPostCallback onValidateOrderCompletedDelegate;
        private BeginOperationDelegate onBeginValidateProductDelegate;
        private EndOperationDelegate onEndValidateProductDelegate;
        private System.Threading.SendOrPostCallback onValidateProductCompletedDelegate;
        public NorthwindServiceClient()
        {
        }

        public NorthwindServiceClient(string endpointConfigurationName): base (endpointConfigurationName)
        {
        }

        public NorthwindServiceClient(string endpointConfigurationName, string remoteAddress): base (endpointConfigurationName, remoteAddress)
        {
        }

        public NorthwindServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress): base (endpointConfigurationName, remoteAddress)
        {
        }

        public NorthwindServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress): base (binding, remoteAddress)
        {
        }

        public event System.EventHandler<ExecuteCompletedEventArgs> ExecuteCompleted;
        public event System.EventHandler<ExecuteManyCompletedEventArgs> ExecuteManyCompleted;
        public event System.EventHandler<LoadPageCompletedEventArgs> LoadPageCompleted;
        public event System.EventHandler<GetDbDateTimeCompletedEventArgs> GetDbDateTimeCompleted;
        public event System.EventHandler<SaveChangesCompletedEventArgs> SaveChangesCompleted;
        public event System.EventHandler<ValidateCustomerCompletedEventArgs> ValidateCustomerCompleted;
        public event System.EventHandler<ValidateEmployeeCompletedEventArgs> ValidateEmployeeCompleted;
        public event System.EventHandler<ValidateInvoiceDetailCompletedEventArgs> ValidateInvoiceDetailCompleted;
        public event System.EventHandler<ValidateInvoiceCompletedEventArgs> ValidateInvoiceCompleted;
        public event System.EventHandler<ValidateOrderDetailCompletedEventArgs> ValidateOrderDetailCompleted;
        public event System.EventHandler<ValidateOrderCompletedEventArgs> ValidateOrderCompleted;
        public event System.EventHandler<ValidateProductCompletedEventArgs> ValidateProductCompleted;
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginExecute(WAQS.ClientContext.Interfaces.Query.QuerySerialization query, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExecute(query, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQSWorkshopClient.ClientContext.QueryResult.NorthwindQueryResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndExecute(System.IAsyncResult result)
        {
            return base.Channel.EndExecute(result);
        }

        private System.IAsyncResult OnBeginExecute(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQS.ClientContext.Interfaces.Query.QuerySerialization query = ((WAQS.ClientContext.Interfaces.Query.QuerySerialization)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginExecute(query, callback, asyncState);
        }

        private object[] OnEndExecute(System.IAsyncResult result)
        {
            WAQSWorkshopClient.ClientContext.QueryResult.NorthwindQueryResult retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndExecute(result);
            return new object[]{retVal};
        }

        private void OnExecuteCompleted(object state)
        {
            if ((this.ExecuteCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ExecuteAsync(WAQS.ClientContext.Interfaces.Query.QuerySerialization query)
        {
            this.ExecuteAsync(query, null);
        }

        public void ExecuteAsync(WAQS.ClientContext.Interfaces.Query.QuerySerialization query, object userState)
        {
            if ((this.onBeginExecuteDelegate == null))
            {
                this.onBeginExecuteDelegate = new BeginOperationDelegate(this.OnBeginExecute);
            }

            if ((this.onEndExecuteDelegate == null))
            {
                this.onEndExecuteDelegate = new EndOperationDelegate(this.OnEndExecute);
            }

            if ((this.onExecuteCompletedDelegate == null))
            {
                this.onExecuteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteCompleted);
            }

            base.InvokeAsync(this.onBeginExecuteDelegate, new object[]{query}, this.onEndExecuteDelegate, this.onExecuteCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginExecuteMany(WAQS.ClientContext.Interfaces.Query.QueriesSerialization queries, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExecuteMany(queries, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQSWorkshopClient.ClientContext.QueryResult.NorthwindQueriesResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndExecuteMany(System.IAsyncResult result)
        {
            return base.Channel.EndExecuteMany(result);
        }

        private System.IAsyncResult OnBeginExecuteMany(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQS.ClientContext.Interfaces.Query.QueriesSerialization queries = ((WAQS.ClientContext.Interfaces.Query.QueriesSerialization)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginExecuteMany(queries, callback, asyncState);
        }

        private object[] OnEndExecuteMany(System.IAsyncResult result)
        {
            WAQSWorkshopClient.ClientContext.QueryResult.NorthwindQueriesResult retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndExecuteMany(result);
            return new object[]{retVal};
        }

        private void OnExecuteManyCompleted(object state)
        {
            if ((this.ExecuteManyCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteManyCompleted(this, new ExecuteManyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ExecuteManyAsync(WAQS.ClientContext.Interfaces.Query.QueriesSerialization queries)
        {
            this.ExecuteManyAsync(queries, null);
        }

        public void ExecuteManyAsync(WAQS.ClientContext.Interfaces.Query.QueriesSerialization queries, object userState)
        {
            if ((this.onBeginExecuteManyDelegate == null))
            {
                this.onBeginExecuteManyDelegate = new BeginOperationDelegate(this.OnBeginExecuteMany);
            }

            if ((this.onEndExecuteManyDelegate == null))
            {
                this.onEndExecuteManyDelegate = new EndOperationDelegate(this.OnEndExecuteMany);
            }

            if ((this.onExecuteManyCompletedDelegate == null))
            {
                this.onExecuteManyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteManyCompleted);
            }

            base.InvokeAsync(this.onBeginExecuteManyDelegate, new object[]{queries}, this.onEndExecuteManyDelegate, this.onExecuteManyCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginLoadPage(int pageSize, WAQS.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression, string[] withSpecificationsProperties, WAQS.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginLoadPage(pageSize, queryExpression, withSpecificationsProperties, identifiers, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQSWorkshopClient.ClientContext.QueryResult.NorthwindQueryResultPage WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndLoadPage(System.IAsyncResult result)
        {
            return base.Channel.EndLoadPage(result);
        }

        private System.IAsyncResult OnBeginLoadPage(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int pageSize = ((int)(inValues[0]));
            WAQS.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression = ((WAQS.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression)(inValues[1]));
            string[] withSpecificationsProperties = ((string[])(inValues[2]));
            WAQS.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers = ((WAQS.ClientContext.Interfaces.Querying.LoadPageParameter[])(inValues[3]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginLoadPage(pageSize, queryExpression, withSpecificationsProperties, identifiers, callback, asyncState);
        }

        private object[] OnEndLoadPage(System.IAsyncResult result)
        {
            WAQSWorkshopClient.ClientContext.QueryResult.NorthwindQueryResultPage retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndLoadPage(result);
            return new object[]{retVal};
        }

        private void OnLoadPageCompleted(object state)
        {
            if ((this.LoadPageCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadPageCompleted(this, new LoadPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void LoadPageAsync(int pageSize, WAQS.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression, string[] withSpecificationsProperties, WAQS.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers)
        {
            this.LoadPageAsync(pageSize, queryExpression, withSpecificationsProperties, identifiers, null);
        }

        public void LoadPageAsync(int pageSize, WAQS.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression, string[] withSpecificationsProperties, WAQS.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers, object userState)
        {
            if ((this.onBeginLoadPageDelegate == null))
            {
                this.onBeginLoadPageDelegate = new BeginOperationDelegate(this.OnBeginLoadPage);
            }

            if ((this.onEndLoadPageDelegate == null))
            {
                this.onEndLoadPageDelegate = new EndOperationDelegate(this.OnEndLoadPage);
            }

            if ((this.onLoadPageCompletedDelegate == null))
            {
                this.onLoadPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadPageCompleted);
            }

            base.InvokeAsync(this.onBeginLoadPageDelegate, new object[]{pageSize, queryExpression, withSpecificationsProperties, identifiers}, this.onEndLoadPageDelegate, this.onLoadPageCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginGetDbDateTime(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetDbDateTime(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndGetDbDateTime(System.IAsyncResult result)
        {
            return base.Channel.EndGetDbDateTime(result);
        }

        private System.IAsyncResult OnBeginGetDbDateTime(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginGetDbDateTime(callback, asyncState);
        }

        private object[] OnEndGetDbDateTime(System.IAsyncResult result)
        {
            System.DateTime retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndGetDbDateTime(result);
            return new object[]{retVal};
        }

        private void OnGetDbDateTimeCompleted(object state)
        {
            if ((this.GetDbDateTimeCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDbDateTimeCompleted(this, new GetDbDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetDbDateTimeAsync()
        {
            this.GetDbDateTimeAsync(null);
        }

        public void GetDbDateTimeAsync(object userState)
        {
            if ((this.onBeginGetDbDateTimeDelegate == null))
            {
                this.onBeginGetDbDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetDbDateTime);
            }

            if ((this.onEndGetDbDateTimeDelegate == null))
            {
                this.onEndGetDbDateTimeDelegate = new EndOperationDelegate(this.OnEndGetDbDateTime);
            }

            if ((this.onGetDbDateTimeCompletedDelegate == null))
            {
                this.onGetDbDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDbDateTimeCompleted);
            }

            base.InvokeAsync(this.onBeginGetDbDateTimeDelegate, null, this.onEndGetDbDateTimeDelegate, this.onGetDbDateTimeCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginSaveChanges(WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext context, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSaveChanges(context, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndSaveChanges(System.IAsyncResult result)
        {
            return base.Channel.EndSaveChanges(result);
        }

        private System.IAsyncResult OnBeginSaveChanges(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext context = ((WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginSaveChanges(context, callback, asyncState);
        }

        private object[] OnEndSaveChanges(System.IAsyncResult result)
        {
            WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndSaveChanges(result);
            return new object[]{retVal};
        }

        private void OnSaveChangesCompleted(object state)
        {
            if ((this.SaveChangesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveChangesCompleted(this, new SaveChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SaveChangesAsync(WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext context)
        {
            this.SaveChangesAsync(context, null);
        }

        public void SaveChangesAsync(WAQSWorkshopClient.ClientContext.Interfaces.Serialization.NorthwindSerializableContext context, object userState)
        {
            if ((this.onBeginSaveChangesDelegate == null))
            {
                this.onBeginSaveChangesDelegate = new BeginOperationDelegate(this.OnBeginSaveChanges);
            }

            if ((this.onEndSaveChangesDelegate == null))
            {
                this.onEndSaveChangesDelegate = new EndOperationDelegate(this.OnEndSaveChanges);
            }

            if ((this.onSaveChangesCompletedDelegate == null))
            {
                this.onSaveChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveChangesCompleted);
            }

            base.InvokeAsync(this.onBeginSaveChangesDelegate, new object[]{context}, this.onEndSaveChangesDelegate, this.onSaveChangesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateCustomer(WAQSWorkshopClient.Customer entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateCustomer(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateCustomer(System.IAsyncResult result)
        {
            return base.Channel.EndValidateCustomer(result);
        }

        private System.IAsyncResult OnBeginValidateCustomer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.Customer entity = ((WAQSWorkshopClient.Customer)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateCustomer(entity, callback, asyncState);
        }

        private object[] OnEndValidateCustomer(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateCustomer(result);
            return new object[]{retVal};
        }

        private void OnValidateCustomerCompleted(object state)
        {
            if ((this.ValidateCustomerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateCustomerCompleted(this, new ValidateCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateCustomerAsync(WAQSWorkshopClient.Customer entity)
        {
            this.ValidateCustomerAsync(entity, null);
        }

        public void ValidateCustomerAsync(WAQSWorkshopClient.Customer entity, object userState)
        {
            if ((this.onBeginValidateCustomerDelegate == null))
            {
                this.onBeginValidateCustomerDelegate = new BeginOperationDelegate(this.OnBeginValidateCustomer);
            }

            if ((this.onEndValidateCustomerDelegate == null))
            {
                this.onEndValidateCustomerDelegate = new EndOperationDelegate(this.OnEndValidateCustomer);
            }

            if ((this.onValidateCustomerCompletedDelegate == null))
            {
                this.onValidateCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateCustomerCompleted);
            }

            base.InvokeAsync(this.onBeginValidateCustomerDelegate, new object[]{entity}, this.onEndValidateCustomerDelegate, this.onValidateCustomerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateEmployee(WAQSWorkshopClient.Employee entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateEmployee(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateEmployee(System.IAsyncResult result)
        {
            return base.Channel.EndValidateEmployee(result);
        }

        private System.IAsyncResult OnBeginValidateEmployee(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.Employee entity = ((WAQSWorkshopClient.Employee)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateEmployee(entity, callback, asyncState);
        }

        private object[] OnEndValidateEmployee(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateEmployee(result);
            return new object[]{retVal};
        }

        private void OnValidateEmployeeCompleted(object state)
        {
            if ((this.ValidateEmployeeCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateEmployeeCompleted(this, new ValidateEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateEmployeeAsync(WAQSWorkshopClient.Employee entity)
        {
            this.ValidateEmployeeAsync(entity, null);
        }

        public void ValidateEmployeeAsync(WAQSWorkshopClient.Employee entity, object userState)
        {
            if ((this.onBeginValidateEmployeeDelegate == null))
            {
                this.onBeginValidateEmployeeDelegate = new BeginOperationDelegate(this.OnBeginValidateEmployee);
            }

            if ((this.onEndValidateEmployeeDelegate == null))
            {
                this.onEndValidateEmployeeDelegate = new EndOperationDelegate(this.OnEndValidateEmployee);
            }

            if ((this.onValidateEmployeeCompletedDelegate == null))
            {
                this.onValidateEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateEmployeeCompleted);
            }

            base.InvokeAsync(this.onBeginValidateEmployeeDelegate, new object[]{entity}, this.onEndValidateEmployeeDelegate, this.onValidateEmployeeCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateInvoiceDetail(WAQSWorkshopClient.InvoiceDetail entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateInvoiceDetail(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateInvoiceDetail(System.IAsyncResult result)
        {
            return base.Channel.EndValidateInvoiceDetail(result);
        }

        private System.IAsyncResult OnBeginValidateInvoiceDetail(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.InvoiceDetail entity = ((WAQSWorkshopClient.InvoiceDetail)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateInvoiceDetail(entity, callback, asyncState);
        }

        private object[] OnEndValidateInvoiceDetail(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateInvoiceDetail(result);
            return new object[]{retVal};
        }

        private void OnValidateInvoiceDetailCompleted(object state)
        {
            if ((this.ValidateInvoiceDetailCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateInvoiceDetailCompleted(this, new ValidateInvoiceDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateInvoiceDetailAsync(WAQSWorkshopClient.InvoiceDetail entity)
        {
            this.ValidateInvoiceDetailAsync(entity, null);
        }

        public void ValidateInvoiceDetailAsync(WAQSWorkshopClient.InvoiceDetail entity, object userState)
        {
            if ((this.onBeginValidateInvoiceDetailDelegate == null))
            {
                this.onBeginValidateInvoiceDetailDelegate = new BeginOperationDelegate(this.OnBeginValidateInvoiceDetail);
            }

            if ((this.onEndValidateInvoiceDetailDelegate == null))
            {
                this.onEndValidateInvoiceDetailDelegate = new EndOperationDelegate(this.OnEndValidateInvoiceDetail);
            }

            if ((this.onValidateInvoiceDetailCompletedDelegate == null))
            {
                this.onValidateInvoiceDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateInvoiceDetailCompleted);
            }

            base.InvokeAsync(this.onBeginValidateInvoiceDetailDelegate, new object[]{entity}, this.onEndValidateInvoiceDetailDelegate, this.onValidateInvoiceDetailCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateInvoice(WAQSWorkshopClient.Invoice entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateInvoice(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateInvoice(System.IAsyncResult result)
        {
            return base.Channel.EndValidateInvoice(result);
        }

        private System.IAsyncResult OnBeginValidateInvoice(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.Invoice entity = ((WAQSWorkshopClient.Invoice)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateInvoice(entity, callback, asyncState);
        }

        private object[] OnEndValidateInvoice(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateInvoice(result);
            return new object[]{retVal};
        }

        private void OnValidateInvoiceCompleted(object state)
        {
            if ((this.ValidateInvoiceCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateInvoiceCompleted(this, new ValidateInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateInvoiceAsync(WAQSWorkshopClient.Invoice entity)
        {
            this.ValidateInvoiceAsync(entity, null);
        }

        public void ValidateInvoiceAsync(WAQSWorkshopClient.Invoice entity, object userState)
        {
            if ((this.onBeginValidateInvoiceDelegate == null))
            {
                this.onBeginValidateInvoiceDelegate = new BeginOperationDelegate(this.OnBeginValidateInvoice);
            }

            if ((this.onEndValidateInvoiceDelegate == null))
            {
                this.onEndValidateInvoiceDelegate = new EndOperationDelegate(this.OnEndValidateInvoice);
            }

            if ((this.onValidateInvoiceCompletedDelegate == null))
            {
                this.onValidateInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateInvoiceCompleted);
            }

            base.InvokeAsync(this.onBeginValidateInvoiceDelegate, new object[]{entity}, this.onEndValidateInvoiceDelegate, this.onValidateInvoiceCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateOrderDetail(WAQSWorkshopClient.OrderDetail entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateOrderDetail(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateOrderDetail(System.IAsyncResult result)
        {
            return base.Channel.EndValidateOrderDetail(result);
        }

        private System.IAsyncResult OnBeginValidateOrderDetail(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.OrderDetail entity = ((WAQSWorkshopClient.OrderDetail)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateOrderDetail(entity, callback, asyncState);
        }

        private object[] OnEndValidateOrderDetail(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateOrderDetail(result);
            return new object[]{retVal};
        }

        private void OnValidateOrderDetailCompleted(object state)
        {
            if ((this.ValidateOrderDetailCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateOrderDetailCompleted(this, new ValidateOrderDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateOrderDetailAsync(WAQSWorkshopClient.OrderDetail entity)
        {
            this.ValidateOrderDetailAsync(entity, null);
        }

        public void ValidateOrderDetailAsync(WAQSWorkshopClient.OrderDetail entity, object userState)
        {
            if ((this.onBeginValidateOrderDetailDelegate == null))
            {
                this.onBeginValidateOrderDetailDelegate = new BeginOperationDelegate(this.OnBeginValidateOrderDetail);
            }

            if ((this.onEndValidateOrderDetailDelegate == null))
            {
                this.onEndValidateOrderDetailDelegate = new EndOperationDelegate(this.OnEndValidateOrderDetail);
            }

            if ((this.onValidateOrderDetailCompletedDelegate == null))
            {
                this.onValidateOrderDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateOrderDetailCompleted);
            }

            base.InvokeAsync(this.onBeginValidateOrderDetailDelegate, new object[]{entity}, this.onEndValidateOrderDetailDelegate, this.onValidateOrderDetailCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateOrder(WAQSWorkshopClient.Order entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateOrder(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateOrder(System.IAsyncResult result)
        {
            return base.Channel.EndValidateOrder(result);
        }

        private System.IAsyncResult OnBeginValidateOrder(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.Order entity = ((WAQSWorkshopClient.Order)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateOrder(entity, callback, asyncState);
        }

        private object[] OnEndValidateOrder(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateOrder(result);
            return new object[]{retVal};
        }

        private void OnValidateOrderCompleted(object state)
        {
            if ((this.ValidateOrderCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateOrderCompleted(this, new ValidateOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateOrderAsync(WAQSWorkshopClient.Order entity)
        {
            this.ValidateOrderAsync(entity, null);
        }

        public void ValidateOrderAsync(WAQSWorkshopClient.Order entity, object userState)
        {
            if ((this.onBeginValidateOrderDelegate == null))
            {
                this.onBeginValidateOrderDelegate = new BeginOperationDelegate(this.OnBeginValidateOrder);
            }

            if ((this.onEndValidateOrderDelegate == null))
            {
                this.onEndValidateOrderDelegate = new EndOperationDelegate(this.OnEndValidateOrder);
            }

            if ((this.onValidateOrderCompletedDelegate == null))
            {
                this.onValidateOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateOrderCompleted);
            }

            base.InvokeAsync(this.onBeginValidateOrderDelegate, new object[]{entity}, this.onEndValidateOrderDelegate, this.onValidateOrderCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.BeginValidateProduct(WAQSWorkshopClient.Product entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateProduct(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WAQS.ClientContext.Interfaces.Errors.Error[] WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService.EndValidateProduct(System.IAsyncResult result)
        {
            return base.Channel.EndValidateProduct(result);
        }

        private System.IAsyncResult OnBeginValidateProduct(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WAQSWorkshopClient.Product entity = ((WAQSWorkshopClient.Product)(inValues[0]));
            return ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).BeginValidateProduct(entity, callback, asyncState);
        }

        private object[] OnEndValidateProduct(System.IAsyncResult result)
        {
            WAQS.ClientContext.Interfaces.Errors.Error[] retVal = ((WAQSWorkshopClient.ClientContext.ServiceReference.INorthwindService)(this)).EndValidateProduct(result);
            return new object[]{retVal};
        }

        private void OnValidateProductCompleted(object state)
        {
            if ((this.ValidateProductCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateProductCompleted(this, new ValidateProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateProductAsync(WAQSWorkshopClient.Product entity)
        {
            this.ValidateProductAsync(entity, null);
        }

        public void ValidateProductAsync(WAQSWorkshopClient.Product entity, object userState)
        {
            if ((this.onBeginValidateProductDelegate == null))
            {
                this.onBeginValidateProductDelegate = new BeginOperationDelegate(this.OnBeginValidateProduct);
            }

            if ((this.onEndValidateProductDelegate == null))
            {
                this.onEndValidateProductDelegate = new EndOperationDelegate(this.OnEndValidateProduct);
            }

            if ((this.onValidateProductCompletedDelegate == null))
            {
                this.onValidateProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateProductCompleted);
            }

            base.InvokeAsync(this.onBeginValidateProductDelegate, new object[]{entity}, this.onEndValidateProductDelegate, this.onValidateProductCompletedDelegate, userState);
        }
    }
}
