//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using WAQS.ClientContext;
using WAQS.ClientContext.Interfaces;
using WAQS.ClientContext.Interfaces.Errors;
using WAQS.EntitiesTracking;
using WAQSWorkshopClient.ClientContext.Interfaces.Serialization;

namespace WAQSWorkshopClient.ClientContext.Interfaces
{
    public partial interface INorthwindClientContext : IClientContext<INorthwindClientContext>
    {
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.Customer> Customers { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.Employee> Employees { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.InvoiceDetail> InvoiceDetails { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.Invoice> Invoices { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.OrderDetail> OrderDetails { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.Order> Orders { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.Product> Products { get; }
        IClientEntitySet<INorthwindClientContext, WAQSWorkshopClient.Category> Categories { get; }
        void RefreshCurrentValues(WAQSWorkshopClient.Customer entityInCache, WAQSWorkshopClient.Customer entity);
        void RefreshCurrentValues(WAQSWorkshopClient.Employee entityInCache, WAQSWorkshopClient.Employee entity);
        void RefreshCurrentValues(WAQSWorkshopClient.InvoiceDetail entityInCache, WAQSWorkshopClient.InvoiceDetail entity);
        void RefreshCurrentValues(WAQSWorkshopClient.Invoice entityInCache, WAQSWorkshopClient.Invoice entity);
        void RefreshCurrentValues(WAQSWorkshopClient.OrderDetail entityInCache, WAQSWorkshopClient.OrderDetail entity);
        void RefreshCurrentValues(WAQSWorkshopClient.Order entityInCache, WAQSWorkshopClient.Order entity);
        void RefreshCurrentValues(WAQSWorkshopClient.Product entityInCache, WAQSWorkshopClient.Product entity);
        void RefreshCurrentValues(WAQSWorkshopClient.Category entityInCache, WAQSWorkshopClient.Category entity);
        DateTime DbDateTime { get; }
        Task<DateTime> GetDbDateTimeAsync();
        Task<Error[]> ValidateOnServerAsync(Customer entity);
        Task<Error[]> ValidateOnServerAsync(Employee entity);
        Task<Error[]> ValidateOnServerAsync(InvoiceDetail entity);
        Task<Error[]> ValidateOnServerAsync(Invoice entity);
        Task<Error[]> ValidateOnServerAsync(OrderDetail entity);
        Task<Error[]> ValidateOnServerAsync(Order entity);
        Task<Error[]> ValidateOnServerAsync(Product entity);
        Task<Error[]> ValidateOnServerAsync(Category entity);
        bool AlreadySoldTo(Employee employee, Customer customer);
        Task<WAQSWorkshopClient.Invoice> AddInvoiceAsync(int orderId, MergeOption? mergeOption = null, ObjectState defaultState = ObjectState.Unchanged, Func<bool> cancel = null);
        Task<WAQSWorkshopClient.InvoiceDetail> CreateInvoiceDetailAsync(OrderDetail od, MergeOption? mergeOption = null, ObjectState defaultState = ObjectState.Unchanged, Func<bool> cancel = null);
        new NorthwindSerializableContext GetModifiedEntities();
        NorthwindSerializableContext GetSerializableContext(NorthwindSerializableContext modifiedEntities);
        Task<NorthwindSerializableContext> TrySavingAsync(Func<Task<NorthwindSerializableContext>> saveChangesAsync);
        void Refresh(NorthwindSerializableContext originalSerializableContext, NorthwindSerializableContext newSerializableContext);
    }
}
